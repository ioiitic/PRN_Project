@page
@model BirthDayPartyBooking.Pages.Admin.OrderManagement.EditModel

@{
    ViewData["Title"] = "Edit";
}



@*<div>*@
 
@*     <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.OrderDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrderDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Place.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Place.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Date)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.TotalPrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.TotalPrice)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Note)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Note)
        </dd>
    </dl>
    @if (@Model.Order.Status == 0)
    {
        <dl class="row">
            <form method="post" asp-page-handler="Accept">
                <input type="hidden" asp-for="Order.Id" />
                <div class="form-group">
                    <input type="submit" value="Accept" class="btn btn-primary" />
                </div>
            </form>
            <form method="post" asp-page-handler="Reject">
                <input type="hidden" asp-for="Order.Id" />
                <div class="form-group">
                    <input type="submit" value="Reject" class="btn btn-secondary" />
                </div>
            </form>
        </dl>
    }
    
    @if (@Model.Order.Status == 1)
    {
        <dl class="row">
            <form method="post" asp-page-handler="Close">
                <input type="hidden" asp-for="Order.Id" />
                <div class="form-group">
                    <input type="submit" value="Close" class="btn btn-primary" />
                </div>
            </form>
        </dl>
    }
</div> *@
@* <div class="row">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Service.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Service.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Service.ServiceType)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderDetails)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Service.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Service.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Service.ServiceType.Name)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div> *@
  <div>
        <section class="dark:bg-gray-900">
            <div class="max-w-5xl mx-auto">
                <div class="flex w-full justify-between items-center">
                    <h2 class="mb-8 text-5xl font-bold text-gray-900 dark:text-white">Edit Order</h2>
                    <div class="flex justify-between items-center gap-4">
                        <div class="form-group">
                            <a href="/Admin/OrderManagement" class="text-red-600 inline-flex items-center hover:text-white border border-red-600 hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900" />
                            Back</a>
                        </div>
                    </div>
                </div>
                <div class="mb-4">
                    <!-- Start coding here -->
                    <div class="bg-white dark:bg-gray-800 relative shadow-md sm:rounded-lg overflow-hidden">
                        <div class="overflow-x-auto">
                            <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                                    <tr>
                                        <th scope="col" class="px-4 py-3">Service Name</th>
                                        <th scope="col" class="px-4 py-3">Description</th>
                                        <th scope="col" class="px-4 py-3">Quantity</th>
                                        <th scope="col" class="px-4 py-3">Price</th>
                                        <th scope="col" class="px-4 py-3">Service Type</th>
                                    </tr>
                                </thead>


                                <tbody>
                                    @foreach (var item in Model.OrderDetails)
                                    {
                                        <tr>
                                            <td class="px-4 py-3">
                                                @Html.DisplayFor(modelItem => item.Service.Name)
                                            </td>
                                            <td class="px-4 py-3">
                                                @Html.DisplayFor(modelItem => item.Service.Description)
                                            </td>
                                            <td class="px-4 py-3">
                                                @Html.DisplayFor(modelItem => item.Number)
                                            </td>
                                            <td class="px-4 py-3">
                                                @Html.DisplayFor(modelItem => item.Service.Price)
                                            </td>
                                            <td class="px-4 py-3">
                                                @Html.DisplayFor(modelItem => item.Service.ServiceType.Name)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="relative overflow-hidden bg-white rounded-b-lg shadow-md dark:bg-gray-800">
                            <nav class="flex flex-row items-center justify-around p-4 pr-16"
                                 aria-label="Table navigation">

                                <div>
                                    <p class="text-sm">
                                        <span class="font-normal text-gray-500 dark:text-gray-400">Total price:</span>
                                        <span class="font-semibold text-gray-900 dark:text-white">   @Html.DisplayFor(model => model.Order.TotalPrice)</span>
                                    </p>
                                </div>
                                <div>
                                    @if (@Model.Order.Status == 0)
                                    {
                                        <form method="post" asp-page-handler="Accept">
                                            <div class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0">
                                                <input type="hidden" asp-for="Order.Id" />
                                                <button type="submit" value="Accept" class="flex items-center justify-center text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800">
                                                    Accept
                                                </button>
                                                <input type="hidden" asp-for="Order.Id" />
                                                <button type="submit" value="Reject" class="flex items-center justify-center text-white  bg-transparent hover:bg-blue-500 hover:text-white border  font-medium rounded-lg text-sm px-4 py-2   border-blue-500 hover:border-transparent rounded-lg">
                                                    Reject
                                                </button>
                                            </div>
                                        </form>
                                    }
                                    @if (@Model.Order.Status == 1)
                                    {

                                        <form method="post" asp-page-handler="Close">
                                            <input type="hidden" asp-for="Order.Id" />
                                            <button type="submit" value="Close" type="button" class="flex items-center justify-center text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800">
                                                Close
                                            </button>
                                        </form>

                                    }
                                </div>


                            </nav>
                        </div>
                    </div>
                </div>
                </>
                <div class="grid gap-4 mb-4 sm:grid-cols-2 sm:gap-6 sm:mb-5">
                    <div class="w-full">
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Place</label>
                        <input disabled readonly value="@Html.DisplayFor(model => model.Order.Place.Name)" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                    </div>
                    <div class="w-full">
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Date</label>
                        <input disabled readonly value="@Html.DisplayFor(model => model.Order.Date)"
                               class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                    </div>

                    <div class="sm:col-span-2">
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"></label>
                        <textarea disabled readonly rows="8" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" )">  @Html.DisplayFor(model => model.Order.Note)</textarea>
                    </div>
                </div>

            </div>
            </section>
            @section Scripts {
                @{
                    await Html.RenderPartialAsync("_ValidationScriptsPartial");
                }
            }

  </div>